name: Python CI/CD Pipeline

on: 
  push:
    branches: [ main, acc, tst, dev ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main, acc, tst, dev ]
    types: [opened, synchronize, reopened]  # Executa quando: PR criado, novo commit, PR reaberto

jobs:
  test:
    name: Test and Lint
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11"]

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install black flake8 mypy pytest-cov
    
    - name: Run linter (flake8)
      run: |
        flake8 hello.py test_hello.py --max-line-length=120
    
    - name: Run type checker (mypy)
      run: |
        mypy hello.py test_hello.py
    
    - name: Run formatter check (black)
      run: |
        black --check hello.py test_hello.py
    
    - name: Run tests with coverage
      run: |
        pytest -v --cov=./ --cov-report=xml
      env:
        # Força execução completa dos testes mesmo em PRs
        GITHUB_ACTIONS: true
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      if: github.event_name == 'push'
    
    - name: Run main script (test mode)
      run: |
        python hello.py --test
    
    - name: Run main script with arguments
      run: |
        python hello.py --add 5 3
        python hello.py --fact 6
        python hello.py --palindrome "ana"

  # ... (restante do workflow permanece igual)
