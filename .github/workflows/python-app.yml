name: Python CI/CD Pipeline
 
 on: 
   push:
     branches: [ main, acc, tst, dev ]
     tags: [ 'v*' ]
   pull_request:
     branches: [ main, acc, tst, dev ]
 
 jobs:
   test:
     name: Test and Lint
     runs-on: ubuntu-latest
     strategy:
       matrix:
         python-version: ["3.8", "3.9", "3.10", "3.11"]
 
     steps:
     - uses: actions/checkout@v4
 
     - name: Set up Python ${{ matrix.python-version }}
       uses: actions/setup-python@v5
       with:
         python-version: ${{ matrix.python-version }}
 
     - name: Install dependencies
       run: |
         python -m pip install --upgrade pip
         pip install -r requirements.txt
         pip install black flake8 mypy pytest-cov
     
     - name: Run linter (flake8)
       run: |
         flake8 hello.py test_hello.py --max-line-length=120
     
     - name: Run type checker (mypy)
       run: |
         mypy hello.py test_hello.py
     
     - name: Run formatter check (black)
       run: |
         black --check hello.py test_hello.py
     
     - name: Run tests with coverage
       run: |
         pytest -v --cov=./ --cov-report=xml
     
     - name: Upload coverage to Codecov
       uses: codecov/codecov-action@v3
       if: github.event_name == 'push'
 
     - name: Run main script (test mode)
       run: |
         python hello.py --test
     
     - name: Run main script with arguments
       run: |
         python hello.py --add 5 3
         python hello.py --fact 6
         python hello.py --palindrome "ana"
 
   docker:
     name: Build and Test Docker Image
     runs-on: ubuntu-latest
     needs: test
     steps:
     - uses: actions/checkout@v4
 
     - name: Set up Docker Buildx
       uses: docker/setup-buildx-action@v2
 
     - name: Build Docker image
       run: |
         docker build -t hello-ci-cd .
     
     - name: Test Docker image
       run: |
         # Teste b√°sico
         docker run --rm hello-ci-cd
         docker run --rm hello-ci-cd --add 5 3
         docker run --rm hello-ci-cd --fact 6
         
         # Teste com argumentos
         docker run --rm hello-ci-cd python hello.py --add 5 3
         docker run --rm hello-ci-cd python hello.py --fact 6
         docker run --rm hello-ci-cd python hello.py --palindrome "ana"
 
   deploy:
     name: Deploy to ACC
     runs-on: ubuntu-latest
     needs: [test, docker]
     if: github.ref == 'refs/heads/acc' || github.event_name == 'push' && contains(github.ref, 'tags')
 
     steps:
     - uses: actions/checkout@v4
 
     - name: Set up Python
       uses: actions/setup-python@v5
       with:
         python-version: '3.x'
 
     - name: Install dependencies
       run: |
         pip install -r requirements.txt
